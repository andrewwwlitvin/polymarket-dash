name: Build and publish dashboards

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 */6 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TZ: Europe/Lisbon
      REUSE_MINUTES: "0"
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # -------- Fetch enriched CSV (KNOWN-GOOD) --------
      - name: Fetch latest markets (fast top-k)
        id: fetch
        run: |
          set -euo pipefail
          WORKDIR="$GITHUB_WORKSPACE"
          DATA_DIR="$WORKDIR/data"
          mkdir -p "$DATA_DIR"

          echo "[fetch] REUSE_MINUTES=${REUSE_MINUTES}"
          if [ "${REUSE_MINUTES}" != "0" ]; then
            recent=$(find "$DATA_DIR" -maxdepth 1 -type f -name 'polymarket_enriched_fast_*.csv' -mmin -"${REUSE_MINUTES}" | sort | tail -n1 || true)
          else
            recent=""
          fi

          if [ -n "${recent:-}" ]; then
            echo "[fetch] Reusing CSV (<= ${REUSE_MINUTES} min old): $recent"
            echo "LATEST_CSV=$recent" >> "$GITHUB_ENV"
          else
            echo "[fetch] Fetching a NEW CSV..."
            python -u "$WORKDIR/scripts/polymarket_enriched_fast.py" --topk 120 --concurrency 8 --fast
            latest=$(find "$WORKDIR" -maxdepth 2 -type f -name 'polymarket_enriched_fast_*.csv' | sort | tail -n1 || true)
            if [ -z "${latest:-}" ]; then
              echo "ERROR: Fetcher did not produce a CSV"; exit 1
            fi
            base=$(basename "$latest")
            mv "$latest" "$DATA_DIR/$base"
            echo "LATEST_CSV=$DATA_DIR/$base" >> "$GITHUB_ENV"
            echo "[fetch] New CSV: $DATA_DIR/$base"
          fi

          echo "[fetch] data/ listing:"
          ls -lAh "$DATA_DIR" || true

      # -------- NEW: derive explicit Top-12 file from the enriched CSV --------
      - name: Derive Top-12 (HOT & OVERLOOKED)
        run: |
          set -euo pipefail
          if [ -z "${LATEST_CSV:-}" ] || [ ! -f "${LATEST_CSV}" ]; then
            echo "ERROR: LATEST_CSV not set or missing"; exit 1
          fi
          python scripts/derive_top12_from_csv.py "${LATEST_CSV}"
          # move produced top12 csv into data/ and export env var
          latest_top=$(ls -1t polymarket_top12_*.csv | head -n1)
          mv "$latest_top" "data/$latest_top"
          echo "LATEST_TOP12=$GITHUB_WORKSPACE/data/$latest_top" >> "$GITHUB_ENV"
          echo "::notice title=Derived Top12::data/$latest_top"
          ls -lAh data || true

      # -------- Build HTML from CSVs --------
      - name: Build site
        run: |
          set -euo pipefail
          echo "LATEST_CSV env: ${LATEST_CSV:-<empty>}"
          echo "LATEST_TOP12 env: ${LATEST_TOP12:-<empty>}"
          if [ -z "${LATEST_CSV:-}" ] || [ ! -f "${LATEST_CSV}" ]; then
            echo "ERROR: LATEST_CSV is not set or missing"; exit 1
          fi

          echo "Building site from: $LATEST_CSV"
          head -n 2 "$LATEST_CSV" | sed 's/^/[csv head] /' || true

          python "$GITHUB_WORKSPACE/scripts/build_site_from_csv.py" "$LATEST_CSV"

          echo "---- list site/ after build ----"
          ls -lAh "$GITHUB_WORKSPACE/site" || true
          if grep -q "sample_enriched_20250101_000000.csv" "$GITHUB_WORKSPACE/site/index.html"; then
            echo "ERROR: index.html contains sample marker; refusing to publish."; exit 1
          fi

      - name: Commit & push site
        run: |
          set -euo pipefail
          echo "==== git status (before add) ===="
          git status
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"

          git add -A site/ data/
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "Auto-build site $(date -u +'%Y-%m-%d %H:%M:%S')"
          git push

      - name: Verify site update
        run: |
          set -e
          if git diff --quiet HEAD~1 HEAD -- site/ data/ ; then
            echo "ERROR: build produced no new changes under site/ or data/."
            exit 1
          fi
