name: Build and publish dashboards

on:
  workflow_dispatch: {}
  schedule:
    # Every 6 hours
    - cron: "0 */6 * * *"
  push:
    paths:
      - "scripts/**"
      - "content/**"
      - "data/**"
      - ".github/workflows/build.yml"

permissions:
  contents: write

concurrency:
  group: "build-site"
  cancel-in-progress: false

env:
  TZ: Europe/Lisbon
  REUSE_MINUTES: "0"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -V
          pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      # -------- Fixed fetch step: always uses topk=120 --------
      - name: Fetch latest markets (fast top-k)
        run: |
          set -euo pipefail
          mkdir -p data
          echo "[timing] fetch step start: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          start=$(date +%s)

          echo "[info] Running fast fetcher with --topk 120 --concurrency 8"
          python scripts/polymarket_enriched_fast.py --topk 120 --concurrency 8

          end=$(date +%s)
          echo "[timing] fetcher wall time: $((end-start))s"

          latest=$(ls -1t polymarket_enriched_fast_*.csv | head -n1)
          if [ -n "$latest" ]; then
            mv "$latest" "data/$latest"
            echo "LATEST_CSV=$GITHUB_WORKSPACE/data/$latest" >> "$GITHUB_ENV"
            echo "::notice title=Fetched CSV::data/$latest"
          fi

          ls -lAh data || true
          echo "[timing] fetch step end: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"

      - name: Generate site
        run: |
          set -euo pipefail
          if [ -n "${LATEST_CSV:-}" ] && [ -f "$LATEST_CSV" ]; then
            echo "[builder] Using CSV: $LATEST_CSV"
            head -n 2 "$LATEST_CSV" | sed 's/^/[csv head] /' || true
            python scripts/build_site_from_csv.py "$LATEST_CSV"
          else
            echo "[builder] No LATEST_CSV set, trying newest in data/"
            python scripts/build_site_from_csv.py
          fi
          ls -lAh site || true

          if grep -q "sample_enriched_20250101_000000.csv" site/index.html; then
            echo "ERROR: index.html contains sample marker; refusing to publish."
            exit 1
          fi

      - name: Configure Git
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push changes
        run: |
          set -euo pipefail
          git pull --rebase origin main || true
          git add site/ data/ || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          stamp=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          git commit -m "Auto-build site ${stamp}"
          git push origin HEAD:main

      - name: Done
        run: echo "Build workflow completed."
