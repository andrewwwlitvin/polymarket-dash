name: Build and publish dashboards

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 */6 * * *"   # every 6 hours UTC
  push:
    paths:
      - "scripts/**"
      - "content/**"
      - "data/**"
      - ".github/workflows/build.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TZ: Europe/Lisbon
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      # ------------------ FETCH ------------------
      - name: Fetch latest markets
        id: fetch
        run: |
          set -euo pipefail
          WORKDIR="$GITHUB_WORKSPACE"
          DATA_DIR="$WORKDIR/data"
          mkdir -p "$DATA_DIR"

          echo "[fetch] Starting at $(date -u +'%F %T UTC')"

          # Run your fast fetcher (top 120)
          python -u scripts/polymarket_enriched_fast.py --topk 120 --concurrency 8

          echo "[fetch] Move any produced CSVs into data/"
          # Move enriched file (wherever it was written) into data/
          latest_enriched="$(ls -1t $WORKDIR/polymarket_enriched_fast_*.csv $WORKDIR/data/polymarket_enriched_fast_*.csv 2>/dev/null | head -n1 || true)"
          if [ -n "${latest_enriched:-}" ] && [ -f "$latest_enriched" ]; then
            base_enriched="$(basename "$latest_enriched")"
            mv -f "$latest_enriched" "$DATA_DIR/$base_enriched" || true
          fi

          # Move Top12 selection file, if your fetcher created one
          latest_top12="$(ls -1t $WORKDIR/polymarket_top12_*.csv $WORKDIR/data/polymarket_top12_*.csv 2>/dev/null | head -n1 || true)"
          if [ -n "${latest_top12:-}" ] && [ -f "$latest_top12" ]; then
            base_top12="$(basename "$latest_top12")"
            mv -f "$latest_top12" "$DATA_DIR/$base_top12" || true
          fi

          echo "[fetch] Final data/ listing:"
          ls -lAh "$DATA_DIR" || true

          # Export env vars for downstream steps
          LATEST_CSV="$(ls -1t "$DATA_DIR"/polymarket_enriched_fast_*.csv 2>/dev/null | head -n1 || true)"
          echo "LATEST_CSV=$LATEST_CSV" >> "$GITHUB_ENV"
          if [ -n "${latest_top12:-}" ]; then
            echo "LATEST_TOP12=$DATA_DIR/$base_top12" >> "$GITHUB_ENV"
          else
            echo "LATEST_TOP12=" >> "$GITHUB_ENV"
          fi

          echo "::notice title=LATEST_CSV::${LATEST_CSV:-<none>}"
          echo "::notice title=LATEST_TOP12::${latest_top12:-<none>}"

          # Hard guard â€“ we must have an enriched CSV
          if [ -z "${LATEST_CSV:-}" ] || [ ! -f "${LATEST_CSV:-/nope}" ]; then
            echo "ERROR: No enriched CSV found after fetch."
            exit 1
          fi

      # ------------------ BUILD ------------------
      - name: Build site
        run: |
          set -euo pipefail
          echo "LATEST_CSV env: ${LATEST_CSV:-<empty>}"
          if [ -z "${LATEST_CSV:-}" ] || [ ! -f "$LATEST_CSV" ]; then
            echo "ERROR: LATEST_CSV is missing or not a file."; exit 1
          fi

          echo "Building site from: $LATEST_CSV"
          head -n 2 "$LATEST_CSV" | sed 's/^/[csv head] /' || true

          # The builder reads LATEST_TOP12 from env if present
          python scripts/build_site_from_csv.py "$LATEST_CSV"

          echo "---- list site/ after build ----"
          ls -lAh site || true

          # Guard: refuse to publish sample data
          if grep -q "sample_enriched_20250101_000000.csv" "site/index.html"; then
            echo "ERROR: sample marker detected in index.html"; exit 1
          fi

      # ------------------ COMMIT ------------------
      - name: Commit & push (if changes)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          echo "==== git status (before add) ===="
          git status

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add -A site data || true

          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          # Rebase to avoid non-fast-forward errors, then push
          git pull --rebase origin main || true
          git commit -m "Auto-build site $(date -u +'%F %T UTC')"
          git push origin HEAD:main
          echo "Pushed site/data updates."

      # ------------------ OUTPUT ------------------
      - name: Show URLs
        if: always()
        run: |
          echo "::notice title=Index::https://urbanpoly.com/index.html"
          echo "::notice title=Archive::https://urbanpoly.com/archive.html"
